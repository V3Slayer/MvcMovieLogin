@model MovieReviewModel

@using Microsoft.AspNetCore.Identity
@using MvcMovieLogin.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Movie List";
}

<h2>Movie List</h2>

<p>
    @if (SignInManager.IsSignedIn(User))
    {
        <a class="btn btn-info" asp-action="Create">Create New Movie</a>
    }
    else
    {
        <a disabled class="btn btn-info">Create New Movie</a>
    }
</p>


<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select class="form-control-select" asp-for="MGenre.movieGenre" asp-items="Model.MGenre.genres">
            <option value="">All</option>
        </select>
        Title: <input type="text" name="SearchString" class="form-control-select">
        <input type="submit" value="Filter" class="btn btn-warning" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MGenre.movies[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MGenre.movies[0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MGenre.movies[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MGenre.movies[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MGenre.movies[0].Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.MGenre.movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @{
                        <a class="btn btn-xs btn-default" asp-action="Details" asp-route-id="@item.ID">Details</a>

                        var hasReview = false;
                        @foreach (var item2 in Model.MReview.review)
                        {
                            Console.WriteLine("item1 ID" + item.ID + "item2 ID" + item2.MovieID);

                            @if (item.ID.Equals(item2.MovieID))
                            {
                                hasReview = true;
                            }
                        }
                        @if (SignInManager.IsSignedIn(User))
                        {
                            @if (hasReview == true)
                            {
                                <a disabled class="btn btn-xs btn-default">Delete</a>
                            }
                            else
                            {
                                <a class="btn btn-xs btn-default" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                            }
                        }
                        else
                        {
                            <a disabled class="btn btn-xs btn-default disabled">Delete</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
